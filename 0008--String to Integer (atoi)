int myAtoi(string str)
{
    int i = str.find_first_not_of(' '); 
    if (i == -1)
        return 0;
    bool positive = true;
    if (str[i] == '+' || str[i] == '-') {
        positive = str[i] == '-' ? false : true;
        ++i;
    }
    int result = 0;
    while (i < str.length() && isdigit(str[i])) {
        int digit = str[i] - '0';
        if (result > (INT_MAX - digit) / 10)
            return positive ? INT_MAX : INT_MIN;
        result = result * 10 + digit;
        ++i;
    }
    return positive ? result : -result;
}

-------

int myAtoi(string str)
{
    int i = str.find_first_not_of(' ');
    if (i == -1)
        return 0;
    int sign = 1;
    if (str[i] == '+' || str[i] == '-') {
        sign = str[i] == '-' ? -1 : 1;
        ++i;
    }
    long result = 0;
    while (i < str.length() && isdigit(str[i])) {
        result = result * 10 + str[i] - '0';
        if (result * sign > INT_MAX)
            return INT_MAX;
        if (result * sign < INT_MIN)
            return INT_MIN;
        ++i;
    }
    return result * sign;
}
